{"version":3,"file":"static/js/534.79db1102.chunk.js","mappings":"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","sources":["pages/common/EditModal.tsx","pages/ReservationDashboard.tsx","pages/common/BusMenu.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { getObjectClassNames } from \"design/utils\";\nimport { Reservation } from \"pages/ReservationDashboard\";\nimport { Button } from \"@mui/material\";\n\nconst modalClasses = getObjectClassNames({\n  container: {\n    flexDirection: \"column\",\n    background: \"aliceblue\",\n    flexWrap: \"wrap\",\n    width: \"40%\",\n    top: \"30%\",\n    right: \"30%\",\n    position: \"fixed\",\n    alignContent: \"center\",\n    height: 300,\n    display: \"flex\",\n    borderRadius: 3,\n    padding: 10,\n    justifyContent: \"center\",\n  },\n  actionContainer: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  fields: {\n    flexDirection: \"column\",\n    display: \"flex\",\n    padding: 10,\n    width: \"80%\",\n    alignContent: \"center\",\n  },\n  input: {\n    height: 25,\n    margin: 5,\n  },\n  label: {\n    margin: 5,\n  },\n});\ntype EditView = {\n  onSaveChanges: any;\n  onCancel: any;\n  onUpdate: any;\n  index: number;\n  reservations: Array<Reservation>;\n};\n\nexport const EditView = (props: EditView) => {\n  const data = props.reservations[props.index];\n  return (\n    <div className={modalClasses.container}>\n      <div className={modalClasses.fields}>\n        <label htmlFor=\"first-name-edit\" className={modalClasses.label}>\n          First Name\n        </label>\n\n        <input\n          defaultValue={data.first_name}\n          id=\"first-name-edit\"\n          onChange={(e) => props.onUpdate(\"first_name\", e.target.value)}\n          className={modalClasses.input}\n        />\n        <label htmlFor=\"last-name-edit\" className={modalClasses.label}>\n          Last Name\n        </label>\n        <input\n          defaultValue={data.last_name}\n          id=\"last-name-edit\"\n          onChange={(e) => props.onUpdate(\"last_name\", e.target.value)}\n          className={modalClasses.input}\n        />\n        <label htmlFor=\"email-edit\" className={modalClasses.label}>\n          Email\n        </label>\n        <input\n          defaultValue={data.email}\n          id=\"email-edit\"\n          onChange={(e) => props.onUpdate(\"email\", e.target.value)}\n          className={modalClasses.input}\n        />\n      </div>\n      <div className={modalClasses.actionContainer}>\n        <Button onClick={props.onSaveChanges}>Save</Button>\n        <Button onClick={props.onCancel}>Cancel</Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Modal } from \"@mui/material\";\nimport axios from \"axios\";\nimport DashboardData from \"../helpers/dashboard.json\";\nimport { getObjectClassNames } from \"../design/utils\";\nimport { Bus, BusMenu } from \"./common/BusMenu\";\nimport { EditView } from \"./common/EditModal\";\n\nconst classes = getObjectClassNames({\n  tableCellHeader: {\n    padding: 10,\n    fontWeight: 600,\n    // border: \"1px solid black\",\n    borderCollapse: \"collapse\",\n    boxShadow: \"0px 2px 5px grey\",\n  },\n  tableContainer: {\n    alignSelf: \"center\",\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    boxShadow: \"0px 1px 3px grey\",\n  },\n  tableHead: {\n    // border: \"1px solid black\",\n    // borderCollapse: \"collapse\",\n    position: \"sticky\",\n    // border: \"1px solid black\",\n    top: 0,\n    background: \"white\",\n    boxShadow: \"0px 2px 5px grey\",\n  },\n  tableCell: {\n    padding: 10,\n    borderRight: \"1px solid black\",\n    boxShadow: \"0px 1px 2px grey\",\n  },\n  tableBody: {\n    \"&:last-child tr\": {\n      border: 0,\n    },\n  },\n  tableRow: {\n    \"&:last-child tr\": {\n      border: 0,\n    },\n  },\n  container: {\n    width: \"80%\",\n    height: 500,\n    overflowY: \"auto\",\n    marginTop: 20,\n    border: \"1px solid black\",\n    borderRadius: 3,\n  },\n  busContainer: {\n    width: \"80%\",\n  },\n  // bodyContainer: {\n  //   width: \"80%\",\n  //   // display: \"flex\",\n  //   // flexDirection: \"column\",\n  //   // justifyContent: \"center\",\n  //   height: 300,\n  //   overflowY: \"auto\",\n  // },\n});\n\nexport type Reservation = {\n  first_name: string;\n  last_name: string;\n  email: string;\n  seat_number: string;\n  booking_date: string;\n};\n\ntype UpdatedValue = {\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n};\n\nconst ReservationDashboard = () => {\n  const [reservations, setReservations] = useState<Array<Reservation>>([]);\n  const [updatedValues, setUpdatedValues] = useState<UpdatedValue>({});\n  const [showEditView, setShowEditView] = useState<boolean>(false);\n  const [busNumber, setBusNumber] = useState<string>(\"\");\n  const currIndexRef = useRef<number>(0);\n\n  useEffect(() => {\n    // (async () => {\n    //   const response = await axios.get(\"reservations\");\n    //   setReservations(response.data);\n    // })();\n    setReservations(DashboardData);\n  }, [busNumber]);\n\n  const onBusSelect = (value: string) => {\n    setBusNumber(value);\n  };\n  const onUpdate = (key: string, value: string) => {\n    const temp = updatedValues;\n    temp[key] = value;\n    setUpdatedValues(temp);\n  };\n\n  const onEdit = (index: number) => {\n    currIndexRef.current = index;\n    setShowEditView(true);\n  };\n\n  const onSaveChanges = () => {\n    const temp = reservations;\n    temp[currIndexRef.current] = {\n      ...temp[currIndexRef.current],\n      ...updatedValues,\n    };\n    setReservations(temp);\n    setShowEditView(false);\n  };\n\n  const onCancel = () => {\n    setShowEditView(false);\n  };\n\n  const editView = () => {};\n\n  const onDelete = (index: number) => {\n    const temp = [...reservations];\n    temp.splice(index, 1);\n    console.log(temp);\n    setReservations(temp);\n  };\n\n  return (\n    <div\n      style={{\n        padding: 10,\n        height: '100%',\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background:\n          \"ghostwhite\",\n      }}\n    >\n      <BusMenu\n        onBusSelect={onBusSelect}\n        containerClass={classes.busContainer}\n      />\n      <div className={classes.container}>\n        <table className={classes.tableContainer}>\n          <thead className={classes.tableHead}>\n            <tr>\n              <td className={classes.tableCellHeader} style={{ width: \"10%\" }}>\n                Serial No.\n              </td>\n              <td className={classes.tableCellHeader} style={{ width: \"30%\" }}>\n                Name\n              </td>\n              <td className={classes.tableCellHeader} style={{ width: \"30%\" }}>\n                Email\n              </td>\n              <td className={classes.tableCellHeader} style={{ width: \"7%\" }}>\n                Seat No.\n              </td>\n              <td className={classes.tableCellHeader} style={{ width: \"10%\" }}>\n                Booking Date\n              </td>\n              <td className={classes.tableCellHeader} style={{ width: \"5%\" }} />\n              <td className={classes.tableCellHeader} style={{ width: \"8%\" }} />\n            </tr>\n          </thead>\n          <tbody className={classes.tableBody}>\n            {reservations.map((e, i) => {\n              let background = i % 2 == 0 ? \"floralwhite\" : \"lavender\";\n              return (\n                <tr className={classes.tableRow}>\n                  <td\n                    className={classes.tableCell}\n                    style={{ width: \"10%\", background: background }}\n                  >\n                    {i + 1}.\n                  </td>\n                  <td\n                    className={classes.tableCell}\n                    style={{ width: \"30%\", background: background }}\n                  >\n                    {e.first_name} {e.last_name}\n                  </td>\n                  <td\n                    className={classes.tableCell}\n                    style={{ width: \"30%\", background: background }}\n                  >\n                    {e.email}\n                  </td>\n                  <td\n                    className={classes.tableCell}\n                    style={{ width: \"7%\", background: background }}\n                  >\n                    {e.seat_number}\n                  </td>\n                  <td\n                    className={classes.tableCell}\n                    style={{ width: \"10%\", background: background }}\n                  >\n                    {e.booking_date}\n                  </td>\n                  <td\n                    className={classes.tableCell}\n                    style={{ width: \"5%\", background: background }}\n                  >\n                    <button onClick={(e) => onEdit(i)}>Edit</button>\n                  </td>\n                  <td\n                    className={classes.tableCell}\n                    style={{ width: \"8%\", background: background }}\n                  >\n                    <button onClick={(e) => onDelete(i)}>Delete</button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <Modal open={showEditView}>\n        <EditView\n          onUpdate={onUpdate}\n          onCancel={onCancel}\n          onSaveChanges={onSaveChanges}\n          reservations={reservations}\n          index={currIndexRef.current}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default ReservationDashboard;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport busDataArray from \"../../helpers/bus.json\";\nimport { getObjectClassNames } from \"design/utils\";\n\nexport type Bus = {\n  number: string;\n};\nconst classes = getObjectClassNames({\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    height: 100,\n    alignItems: 'center',\n    background: 'floralwhite',\n    borderRadius: 3,\n    margin: 10\n  },\n  label:{\n    fontWeight: 600,\n    textDecoration: 'underline'\n  }\n});\ntype BusMenuProps = {\n  optionClass?: any;\n  datalistClass?: any;\n  containerClass?: any;\n  onBusSelect: any;\n};\nexport const BusMenu = (props: BusMenuProps) => {\n  const [busData, setBusData] = useState<Array<Bus>>([{ number: \"\" }]);\n  useEffect(() => {\n    (async () => {\n    //   const response = await axios.get(\"fetch bus\");\n      setBusData(busDataArray);\n    })();\n  });\n\n  const onSelect = () => {\n    var val = (document.getElementById(\"bus-input\") as HTMLInputElement).value;\n    var opts: any = (\n      document.getElementById(\"buses-list\") as HTMLDataListElement\n    ).children;\n    for (var i = 0; i < opts.length; i++) {\n      if (opts[i].value === val) {\n        // An item was selected from the list!\n        props.onBusSelect(val);\n      }\n    }\n  };\n  return (\n    <div className={`${classes.container} ${props.containerClass}`}>\n      <label className={classes.label} htmlFor=\"bus-menu\">Select Bus:</label>\n      <input\n        list=\"buses-list\"\n        id=\"bus-input\"\n        name=\"bus-menu\"\n        onInput={onSelect}\n      />\n      <datalist className={`${classes.datalist}`} id=\"buses-list\">\n        {busData.map((bus) => {\n          return <option className={`${classes.option}`}>{bus.number}</option>;\n        })}\n      </datalist>\n    </div>\n  );\n};\n"],"names":["modalClasses","getObjectClassNames","container","flexDirection","background","flexWrap","width","top","right","position","alignContent","height","display","borderRadius","padding","justifyContent","actionContainer","fields","input","margin","label","EditView","props","data","reservations","index","_jsxs","className","children","_jsx","htmlFor","defaultValue","first_name","id","onChange","e","onUpdate","target","value","last_name","email","Button","onClick","onSaveChanges","onCancel","classes","tableCellHeader","fontWeight","borderCollapse","boxShadow","tableContainer","alignSelf","tableHead","tableCell","borderRight","tableBody","border","tableRow","overflowY","marginTop","busContainer","ReservationDashboard","setReservations","useState","updatedValues","setUpdatedValues","showEditView","setShowEditView","busNumber","setBusNumber","currIndexRef","useRef","useEffect","DashboardData","style","alignItems","BusMenu","onBusSelect","containerClass","map","i","seat_number","booking_date","onEdit","current","temp","splice","console","log","onDelete","Modal","open","key","textDecoration","busData","setBusData","number","busDataArray","concat","list","name","onInput","onSelect","val","document","getElementById","opts","length","datalist","bus","option"],"sourceRoot":""}